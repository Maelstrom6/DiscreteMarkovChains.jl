var documenterSearchIndex = {"docs":
[{"location":"functions/#Functions","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"","category":"page"},{"location":"functions/#Core-Types","page":"Functions","title":"Core Types","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"The main type is DiscreteMarkovChain:","category":"page"},{"location":"functions/","page":"Functions","title":"Functions","text":"DiscreteMarkovChains.DiscreteMarkovChain\nDiscreteMarkovChains.state_space\nDiscreteMarkovChains.transition_matrix","category":"page"},{"location":"functions/#DiscreteMarkovChains.DiscreteMarkovChain","page":"Functions","title":"DiscreteMarkovChains.DiscreteMarkovChain","text":"DiscreteMarkovChain(state_space, transition_matrix)\n\nCreates a new discrete Markov chain object.\n\nParameters\n\nstate_space: The names of the states that make up the Markov chain.\ntransition_matrix: The single step transition probability matrix.\n\nExamples\n\nThe following shows a basic Sunny-Cloudy-Rainy weather model.\n\nusing DiscreteMarkovChains\nT = [\n     0.9 0.1 0;\n     0.5 0.2 0.3;\n     0.1 0.4 0.5\n    ]\nX = DiscreteMarkovChain([\"Sunny\", \"Cloudy\", \"Rainy\"], T)\nprint(state_space(X))\n\n# output\n\n[\"Sunny\", \"Cloudy\", \"Rainy\"]\n\n\n\n\n\n","category":"type"},{"location":"functions/#DiscreteMarkovChains.state_space","page":"Functions","title":"DiscreteMarkovChains.state_space","text":"state_space(x)\n\nParameters\n\nx: some kind of Markov chain.\n\nReturns\n\nThe state space of a Markov chain.\n\n\n\n\n\n","category":"function"},{"location":"functions/#DiscreteMarkovChains.transition_matrix","page":"Functions","title":"DiscreteMarkovChains.transition_matrix","text":"transition_matrix(x)\n\nParameters\n\nx: some kind of Markov chain.\n\nReturns\n\nThe transition matrix of a Markov chain.\n\n\n\n\n\n","category":"function"},{"location":"functions/#Simple-Functions","page":"Functions","title":"Simple Functions","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"DiscreteMarkovChains.is_regular\nDiscreteMarkovChains.is_ergodic\nDiscreteMarkovChains.is_absorbing","category":"page"},{"location":"functions/#DiscreteMarkovChains.is_regular","page":"Functions","title":"DiscreteMarkovChains.is_regular","text":"is_regular(x)\n\nParameters\n\nx: some kind of Markov chain.\n\nReturns\n\ntrue if the Markov chain, x, is regular.\n\n\n\n\n\n","category":"function"},{"location":"functions/#DiscreteMarkovChains.is_ergodic","page":"Functions","title":"DiscreteMarkovChains.is_ergodic","text":"is_ergodic(x)\n\nParameters\n\nx: some kind of Markov chain.\n\nReturns\n\ntrue if the Markov chain, x, is ergodic. This is, if every state can be accessed from every other state. Another term for this is irreducible.\n\n\n\n\n\n","category":"function"},{"location":"functions/#DiscreteMarkovChains.is_absorbing","page":"Functions","title":"DiscreteMarkovChains.is_absorbing","text":"is_absorbing(x)\n\nParameters\n\nx: some kind of Markov chain.\n\nReturns\n\ntrue if the Markov chain, x, is an absorbing chain. So the process is guarenteed to be absorbed eventually.\n\n\n\n\n\n","category":"function"},{"location":"functions/#Communicaton-Functions","page":"Functions","title":"Communicaton Functions","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"DiscreteMarkovChains.communication_classes\nDiscreteMarkovChains.periodicities\nDiscreteMarkovChains.decompose\nDiscreteMarkovChains.canonical_form","category":"page"},{"location":"functions/#DiscreteMarkovChains.communication_classes","page":"Functions","title":"DiscreteMarkovChains.communication_classes","text":"communication_classes(x)\n\nParameters\n\nx: some kind of Markov chain.\n\nReturns\n\nA tuple containing 2 arrays. \n\nThis first array contains C arrays which store the states that communicate. \nThe second array is an array of Bool where the ith value is true if the  ith communication class is recurrent. \n\n\n\n\n\n","category":"function"},{"location":"functions/#DiscreteMarkovChains.periodicities","page":"Functions","title":"DiscreteMarkovChains.periodicities","text":"periodicities(x::AbstractDiscreteMarkovChain)\n\nA more advanced version of communication_classes  designed for discrete Markov chains. It is the same as  communication_classes but it returns periodicities as well.\n\nParameters\n\nx: some kind of discrete Markov chain.\n\nReturns\n\nA tuple containing 3 arrays. \n\nThis first array contains C arrays which store the states that communicate. \nThe second array is an array of Bool where the ith value is true if the  ith communication class is recurrent. \nThe third array is the periodicity of each communication class.\n\n\n\n\n\n","category":"function"},{"location":"functions/#DiscreteMarkovChains.decompose","page":"Functions","title":"DiscreteMarkovChains.decompose","text":"decompose(x)\n\nParameters\n\nx: some kind of Markov chain.\n\nReturns\n\nA tuple of four values\n\nThe first value is an array of the new states.\nThe second value is a matrix of recurrent states to recurrent states.\nThe third value is a matrix of transient states to recurrent states.\nThe fourth value is a matrix of transient to transient states.\n\n\n\n\n\n","category":"function"},{"location":"functions/#DiscreteMarkovChains.canonical_form","page":"Functions","title":"DiscreteMarkovChains.canonical_form","text":"canonical_form(x)\n\nReorders the states of the transition matrix of x so that  recurrent states appear first and transient states appear last.\n\nParameters\n\nx: some kind of Markov chain.\n\nReturns\n\nA tuple with the new states and the new transition matrix.\n\n\n\n\n\n","category":"function"},{"location":"functions/#Probability-Functions","page":"Functions","title":"Probability Functions","text":"","category":"section"},{"location":"functions/","page":"Functions","title":"Functions","text":"DiscreteMarkovChains.stationary_distribution\nDiscreteMarkovChains.fundamental_matrix\nDiscreteMarkovChains.expected_time_to_absorption\nDiscreteMarkovChains.exit_probabilities\nDiscreteMarkovChains.first_passage_probabilities","category":"page"},{"location":"functions/#DiscreteMarkovChains.stationary_distribution","page":"Functions","title":"DiscreteMarkovChains.stationary_distribution","text":"stationary_distribution(x)\n\nParameters\n\nx: some kind of Markov chain.\n\nReturns\n\nA column vector, w, that satisfies the equation wT = w.\n\n\n\n\n\n","category":"function"},{"location":"functions/#DiscreteMarkovChains.fundamental_matrix","page":"Functions","title":"DiscreteMarkovChains.fundamental_matrix","text":"fundamental_matrix(x)\n\nThe fundamental matrix of a markov chain is defined to be (C-I)^-1  where C is the sub-transition matrix that takes transient states  to transient states.\n\nParameters\n\nx: some kind of Markov chain.\n\nReturns\n\nThe fundamental matrix of the Markov chain\n\n\n\n\n\n","category":"function"},{"location":"functions/#DiscreteMarkovChains.expected_time_to_absorption","page":"Functions","title":"DiscreteMarkovChains.expected_time_to_absorption","text":"expected_time_to_absorption(x)\n\nParameters\n\nx: some kind of Markov chain.\n\nReturns\n\nAn array where element i is the total number of visits to  transient state i before leaving the transient super class.\n\nNote\n\nIt is advised to have x in canonical form already. This is to avoid confusion of what states make up each  element of the array ouput.\n\n\n\n\n\n","category":"function"},{"location":"functions/#DiscreteMarkovChains.exit_probabilities","page":"Functions","title":"DiscreteMarkovChains.exit_probabilities","text":"exit_probabilities(x)\n\nParameters\n\nx: some kind of Markov chain.\n\nReturns\n\nAn array where element i j is the probability that transient  state i will enter recurrent state j on its first step  out of the transient states. That is, e_ij.\n\n\n\n\n\n","category":"function"},{"location":"functions/#DiscreteMarkovChains.first_passage_probabilities","page":"Functions","title":"DiscreteMarkovChains.first_passage_probabilities","text":"first_passage_probabilities(x, t, i=missing, j=missing)\n\nThis is the probability that the process enters state j  for the first time at time t given that the process started  in state i at time 0. That is, f^(t)_ij. If no i  or j is given, then it will return a matrix instead with  entries f^(t)_ij for i and j in the state space of x.\n\nParameters\n\nx: some kind of Markov chain.\nt: the time to calculate the first passage probability.\ni: the state that the prcess starts in.\nj: the state that the process must reach for the first time.\n\nReturns\n\nA scalar value or a matrix depending on whether i and j are given.\n\n\n\n\n\n","category":"function"},{"location":"introduction/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"introduction/#Installation","page":"Introduction","title":"Installation","text":"","category":"section"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"DiscreteMarkovChains should be up on Julia's package registry.","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Simply type","category":"page"},{"location":"introduction/","page":"Introduction","title":"Introduction","text":"Import Pkg\nPkg.add(\"DiscreteMarkovChains\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = DiscreteMarkovChains","category":"page"},{"location":"#DiscreteMarkovChains","page":"Home","title":"DiscreteMarkovChains","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"DiscreteMarkovChains is a package that supports various functions relating to discrete Markov chains. In particular, it deals with discrete-time discrete-space time-homogenous finite Markov chains.","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Introduction","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Chris du Plessis","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MIT","category":"page"}]
}
